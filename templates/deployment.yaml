apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  labels:
    app: {{ .Values.name }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      deployment: {{ .Values.name }}
  template:
    metadata:
      labels:
        deployment: {{ .Values.name }}
    spec:
      imagePullSecrets:
      - name: {{ .Values.image.imagePullSecret }}
      containers:
        - name: {{ .Values.name }}
          {{ if eq .Values.environment "test" }}
          image: {{ .Values.registry }}/{{ .Values.image.test.repository }}/{{ .Values.image.name }}:{{ .Values.image.test.tag }}
          {{ else if eq .Values.environment "uat" }}
          image: {{ .Values.registry }}/{{ .Values.image.uat.repository }}/{{ .Values.image.name }}:{{ .Values.image.uat.tag }}
          {{ else if eq .Values.environment "prod" }}
          image: {{ .Values.registry }}/{{ .Values.image.prod.repository }}/{{ .Values.image.name }}:{{ .Values.image.prod.tag }}
          {{ end }}
          ports:
            - containerPort: {{ .Values.containerPort }}
              protocol: TCP
            {{ if ne .Values.containerPort2 "" }}
            - containerPort: {{ .Values.containerPort2 }}
              protocol: TCP
            {{ end }}
          env:
            {{ if eq .Values.environment "test" }}
            {{- include "helpers.list-env-variables-cm-test" . | indent 10 }}
            {{- include "helpers.list-env-variables-secret-test" . | indent 10 }}
            {{ else if eq .Values.environment "uat" }}
            {{- include "helpers.list-env-variables-cm-uat" . | indent 10 }}
            {{- include "helpers.list-env-variables-secret-uat" . | indent 10 }}
            {{ else if eq .Values.environment "prod" }}
            {{- include "helpers.list-env-variables-cm-prod" . | indent 10 }}
            {{- include "helpers.list-env-variables-secret-prod" . | indent 10 }}
            {{ end }}
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600